name: Build wheels and publish to PyPI

on:
  push:
    branches:
    - main
    tags:
    - v*
  pull_request:
    paths:
    - .github/workflows/wheels.yaml
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-20.04
        - windows-2019
        - macos-13    # x86_64
        - macos-14    # arm64

      fail-fast: false

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - uses: yezz123/setup-uv@v4
      with:
        uv-version: 0.2.18
        uv-venv: .venv

    - name: Build wheels for CPython
      uses: pypa/cibuildwheel@v2.20.0
      with:
        output-dir: dist
      env:
        CIBW_TEST_COMMAND: >
          uv pip install -r {project}/test_requirements.txt
          && pytest --pyargs ewah_bool_utils --color=yes

    - uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Build sdist
      run: pipx run build --sdist

    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  check_manifest:
    name: Check MANIFEST.in
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - uses: yezz123/setup-uv@v4
      with:
        uv-version: 0.2.18
        uv-venv: .venv
    - name: install check-manifest
      run: uv pip install check-manifest
    - name: Install build time dependencies
      shell: bash
      run: |
        uv pip install "Cython>=3.0,<3.1"
        uv pip install oldest-supported-numpy
        uv pip install --upgrade wheel
        uv pip install --upgrade setuptools
    - name: Build
      shell: bash
      run: uv pip install --no-build-isolation .
    - name: run check-manifest
      run: check-manifest -vvv

  deploy:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist, check_manifest]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - name: Download sdist
      uses: actions/download-artifact@v4
      with:
        name: sdist
        path: dist

    - name: Download wheels
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: wheels-*
        merge-multiple: true

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.9.0
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
